#!/usr/bin/env node
// vim: set ft=javascript:

var util = require('util'),
    fs = require('fs'),
    path = require('path'),
    BiwaScheme = require('biwascheme'),
    optparse = require('optparse');

function Options(argv){
  var opts = this;
  var parser = new optparse.OptionParser([
    //[      '--encoding', 'Specify encoding (default: utf8)'],
    ['-e', '--eval CODE', 'Evaluate the given string'],
    ['-h', '--help', 'Show this message']
  ]);

  parser.banner = [
    ('BiwaScheme version ' + BiwaScheme.Version),
    'Usage: biwas [options] foo.scm',
    'Example:',
    '  ;; foo.scm',
    '  (print "Hello, world!")',
  ].join("\n")

  parser.on('eval', function(name, value) {
    opts.code = value;
  });

  parser.on('help', function() {
    util.puts(parser.toString());
    process.exit(0);
  });

  opts.args = parser.parse(argv);
  opts.parser = parser;
}

function main(){
  var opts = new Options(process.argv.slice(2));

  if (opts.code) {
    BiwaScheme.run(opts.code);
  }
  else {
    if(opts.args.length >= 1){
      var src = require('fs').readFileSync(opts.args[0], 'utf8');
      BiwaScheme.run(src);
    }
    else{
      // repl
      var rl = require('readline').createInterface(process.stdin,
                                                   process.stdout);
      rl.on('line', function(line) {
        var result = BiwaScheme.run(line);
        util.puts(result);

        rl.prompt();
      });

      rl.on('close', function() {
        process.exit(0);
      });

      var prompt = "> ";
      rl.setPrompt(prompt, prompt.length);

      util.puts('BiwaScheme version ' + BiwaScheme.Version);
      util.puts('try (+ 1 2), etc. (Ctrl-D to exit)');
      rl.prompt();
    }
  }
}

main();

