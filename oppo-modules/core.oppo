;; macros
(defmacro call (fn ...args)
  `(fn ...args))
  
(defmacro apply (fn ...args ls)
  (concat `(fn) args ls))

(defmacro defn (fname args ...body)
  `(def fname (lambda args ...body)))

;; definitions
(let (keywords {})
  (defn keyword (word)
    (let (key (or (keywords word) { "name" word }))
      (set! keywords (merge keywords key)))))